name: Process Message

on:
  pull_request:
    types: [opened]
    branches:
      - main
  pull_request_target:
    types: [opened]
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  process:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Extract username
        id: extract
        run: |
          USERNAME="${{ github.event.pull_request.user.login }}"
          echo "username=$USERNAME" >> $GITHUB_OUTPUT
          echo "Processing: @$USERNAME"

      - name: Validate message
        run: |
          USERNAME="${{ steps.extract.outputs.username }}"
          if [ ! -f "messages/${USERNAME}.txt" ]; then
            echo "Error: messages/${USERNAME}.txt not found"
            exit 1
          fi
          echo "Message file found!"

      - name: Install GPG
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y gnupg

      - name: Import GPG key
        env:
          KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        run: |
          if [ -z "$KEY" ]; then
            echo "Error: GPG key not found"
            exit 1
          fi
          echo "$KEY" | gpg --import

      - name: Encrypt
        run: |
          USERNAME="${{ steps.extract.outputs.username }}"
          mkdir -p "sealed/${USERNAME}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          
          gpg --encrypt \
              --recipient "time-capsule-2035" \
              --armor \
              --trust-model always \
              --output "sealed/${USERNAME}/${USERNAME}-${TIMESTAMP}.gpg" \
              "messages/${USERNAME}.txt"
          
          cp -r sealed /tmp/sealed-backup

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Restore
        run: |
          USERNAME="${{ steps.extract.outputs.username }}"
          mkdir -p "sealed/${USERNAME}"
          cp -r /tmp/sealed-backup/${USERNAME}/* "sealed/${USERNAME}/"

      - name: Commit
        run: |
          USERNAME="${{ steps.extract.outputs.username }}"
          git config user.name "Bot"
          git config user.email "bot@local"
          git add sealed/
          git commit -m "Sealed from @${USERNAME}" || true
          git push origin main || true

      - name: Comment
        uses: actions/github-script@v7
        with:
          script: |
            const username = '${{ steps.extract.outputs.username }}';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ðŸŽ‰ Message Sealed!

@${username} - Your message has been encrypted and sealed!

âœ… Encrypted with GPG
âœ… Saved to sealed/${username}/
âœ… Committed to main
âœ… Will unlock on January 1, 2035

Thank you!`
            });

      - name: Close
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await new Promise(r => setTimeout(r, 2000));
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            });

