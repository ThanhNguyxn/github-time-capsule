name: Seal the Capsule

on:
  pull_request:
    types: [opened]
    paths:
      - 'sealed/**'  # Only trigger when sealed/ folder changes

permissions:
  contents: write
  pull-requests: write

# Prevent concurrent runs for the same PR
concurrency:
  group: seal-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  seal-message:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔍 Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: "Security: Validate PR changes"
        id: validate
        run: |
          echo "Checking what files were changed..."
          
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Count changes outside sealed/
          DANGEROUS_CHANGES=$(echo "$CHANGED_FILES" | grep -v "^sealed/" | grep -v "^$" || true)

          if [ ! -z "$DANGEROUS_CHANGES" ]; then
            echo "❌ SECURITY: PR attempts to modify files outside sealed/ folder!"
            echo "Blocked files:"
            echo "$DANGEROUS_CHANGES"
            echo ""
            echo "⚠️ Only files in sealed/ folder are allowed."
            exit 1
          fi

          echo "✅ Security check passed"

      - name: "Limit submissions to one per day"
        run: |
          USERNAME="${{ github.event.pull_request.user.login }}"
          TODAY=$(date +%Y-%m-%d)
          DAILY_FOLDER="sealed/${USERNAME}/${TODAY}"

          # Check if the user already has a submission for today
          if [ -d "$DAILY_FOLDER" ]; then
            echo "❌ You have already submitted a message today! Only one submission per day is allowed."
            exit 1
          fi

          # Allow repository owner to bypass this restriction
          REPO_OWNER="${{ github.repository_owner }}"
          if [ "$USERNAME" == "$REPO_OWNER" ]; then
            echo "✅ Repository owner is allowed multiple submissions."
          else
            echo "✅ Submission allowed for user: $USERNAME"
          fi

      - name: "Decrypt messages on January 1, 2035"
        if: ${{ github.event.pull_request.merged_at && github.event.pull_request.merged_at == '2035-01-01' }}
        run: |
          echo "Decrypting messages..."
          for file in sealed/**/*.gpg; do
            OUTPUT_FILE="messages/$(basename "$file" .gpg).txt"
            gpg --batch --yes --decrypt --output "$OUTPUT_FILE" "$file"
            echo "Decrypted $file to $OUTPUT_FILE"
          done

          echo "✅ All messages decrypted successfully!"

      - name: 💾 Save encrypted file temporarily
        run: |
          USERNAME="${{ github.event.pull_request.user.login }}"
          ENCRYPTED_FILE="sealed/${USERNAME}.txt.gpg"
          cp "$ENCRYPTED_FILE" "/tmp/${USERNAME}.txt.gpg"
          echo "✅ Saved encrypted file to /tmp"

      - name: 📦 Restore encrypted file
        run: |
          USERNAME="${{ github.event.pull_request.user.login }}"
          ENCRYPTED_FILE="sealed/${USERNAME}.txt.gpg"
          cp "/tmp/${USERNAME}.txt.gpg" "$ENCRYPTED_FILE"
          echo "✅ Restored encrypted file to sealed/"

      - name: 🎉 Close PR regardless of outcome
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            });

