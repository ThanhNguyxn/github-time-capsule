name: Encrypt Message

on:
  pull_request:
    types: [opened]

jobs:
  encrypt:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      
    steps:
      - name: Comment Step 1
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'âœ… Workflow triggered! Starting encryption process...'
            });
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Extract username
        id: user
        run: |
          echo "username=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
      
      - name: Validate
        run: |
          USERNAME="${{ steps.user.outputs.username }}"
          if [ ! -f "messages/${USERNAME}.txt" ]; then
            echo "Error: Message file not found"
            exit 1
          fi
      
      - name: Setup GPG
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y gnupg
      
      - name: Import GPG
        env:
          KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        run: |
          echo "$KEY" | gpg --import
      
      - name: Encrypt
        run: |
          USERNAME="${{ steps.user.outputs.username }}"
          mkdir -p "sealed/${USERNAME}"
          TS=$(date +%Y%m%d-%H%M%S)
          
          gpg --encrypt \
              --recipient "time-capsule-2035" \
              --armor \
              --trust-model always \
              --output "sealed/${USERNAME}/${USERNAME}-${TS}.gpg" \
              "messages/${USERNAME}.txt"
          
          cp -r sealed /tmp/sealed-backup
      
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Restore
        run: |
          USERNAME="${{ steps.user.outputs.username }}"
          mkdir -p "sealed/${USERNAME}"
          cp -r /tmp/sealed-backup/${USERNAME}/* "sealed/${USERNAME}/"
      
      - name: Commit
        run: |
          USERNAME="${{ steps.user.outputs.username }}"
          git config user.name "Bot"
          git config user.email "bot@local"
          git add sealed/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sealed @${USERNAME}"
            git push origin main
          fi
      
      - name: Success
        uses: actions/github-script@v7
        with:
          script: |
            const user = '${{ steps.user.outputs.username }}';
            const message = '## ðŸŽ‰ Sealed!\n\n' +
              '@' + user + ' - Encrypted and saved!\n\n' +
              'âœ… Sealed to: sealed/' + user + '/\n' +
              'âœ… Unlocks: January 1, 2035\n\n' +
              'Thank you!';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
      
      - name: Close
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await new Promise(r => setTimeout(r, 2000));
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            });
